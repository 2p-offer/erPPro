package com.warship.test.jvm;

public class _198_NoteJVMTool {
    /**
     *   虚拟机进程状况
     *  jps - v  m  l  q
     *
     */

    /**
     *  虚拟机统计信息监控工具
     *  jstat -option pid interval count
     *  -class -gc -gccapacity -gcutil -gccause -gcnew -gcold...
     *
     *  eg: jstat -gc 32287 1000 10
     *  监视pid为32287 的进程，gc状况，每1000ms打印一次，打印十次
     *
     *   S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT
     * 1536.0 6144.0 1291.5  0.0   179200.0 35081.2   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 35081.2   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 35162.6   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 35164.7   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 35320.3   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 35336.1   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 35346.8   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 35417.8   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 57066.5   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     * 1536.0 6144.0 1291.5  0.0   179200.0 91561.3   392192.0   228014.7  114792.0 112859.0 10624.0 10199.6    186    3.150   5      1.946    5.096
     *
     * SxC  survivor区总大小
     * SxU  servivor区已使用大小
     * EC / EU Eden区总大小/已使用大小
     * OC / OU 老年代总大小/已使用大小
     * MC / MU 方法去总大小/已使用大小
     * YGC/YGCT yongGC 回收次数 / yongGC消耗时间
     * FGC/FGCT oldGC 回收次数 / oldGC消耗时间
     * GCT GC总耗时
     */

    /**
     * java 参数配置信息工具
     *
     * jinfo 实时查看和调整虚拟机各项参数
     */

    /**
     * java 内存映像工具
     * jmap [option] vmid
     * -dump 生成java堆转储快照，   eg: java -dump:[live,]format=b,file=filename.out  live 表示是否是dump出存活的对象
     * -heap 显示java堆详细信息， 那种回收期、参数配置、分代状况等。
     * -histo 显示堆对象统计信息，类、实力数量、合计容量
     * -permstat 以ClassLoader为统计口径显示永久代内存状态
     * -F 当-dump没有响应时，使用-F强制生成dump快照
     */

    /**
     * 虚拟机堆转储快照分析工具
     * jhat filename.out
     * 访问 ip:7000 。可简单分析dump文件
     */

    /**
     * java堆栈跟踪工具，生成线程快照
     *
     * jstack [option] vmid
     *
     * jstack -l 5909
     * -F 在正常输出无法响应是，强制输出线程堆栈
     * -l 在输出堆栈同事，输出锁的附加信息
     * -m 本地方法，显示c/c++堆栈
     */

}
